# Substitutions for reusable variables
substitutions:
  name: esphome-dog-feeder
  friendly_name: dog feeder

# ESPHome configuration
esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false
  project:
    name: dogfeeder.esphome
    version: '1.0'
  on_boot:
    # Wait 10 seconds on boot
    then:
      - logger.log: reset position!
      - servo.write: 
          id: my_servo
          level: -100%

# Enable logging for debugging
logger:

# Enable a web server for device monitoring
web_server:

# Enable captive portal for easier Wi-Fi setup
captive_portal:

# Enable Home Assistant API for integration
api:

# Enable OTA updates for firmware updates
ota:
  # Specify OTA platform
  platform: esphome

# Example configuration entry
servo:
  - id: my_servo
    output: pwm_output

# Example output platform
# On ESP32, use ledc output
output:
  - platform: ledc
    id: pwm_output
    pin: GPIO27
    frequency: 50 Hz

# Slider configuration for controlling servo position
number:
  - platform: template
    name: "Servo Position"
    id: servo_position
    # Minimum slider value
    min_value: -100
    # Maximum slider value
    max_value: 100
    # Slider step size
    initial_value: -100
    optimistic: True
    step: 1
    on_value:
      - servo.write: 
          id: my_servo
          level: !lambda ' return x / 100.0;'

# Import configuration from scoop.yaml
dashboard_import:
  package_import_url: /config/esphome/smart_feeder/scoop.yaml
  import_full_config: true

# Sync time with Home Assistant.
time:
  - platform: homeassistant
    id: homeassistant_time
