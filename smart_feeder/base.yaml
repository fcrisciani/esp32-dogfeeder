# Substitutions for reusable variables
substitutions:
  name: esphome-dog-feeder
  friendly_name: dog feeder

# Include other configuration files
packages:
  scoop: !include scoop.yaml
  #schedules: !include schedules.yaml

# ESPHome configuration
esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false
  project:
    name: dogfeeder.esphome
    version: '1.0'
  on_boot:
    priority: 500  # Lower priority than our UI update
    then:
      - logger.log: "reset position!"
      - servo.write: 
          id: my_servo
          level: -100%

# Enable logging for debugging
logger:

# Enable a web server for device monitoring
web_server:

# Enable captive portal for easier Wi-Fi setup
captive_portal:

# Enable Home Assistant API for integration
api:

# Enable Bluetooth Proxy feature
bluetooth_proxy:

# Enable OTA updates for firmware updates
ota:
  # Specify OTA platform
  platform: esphome

# Example configuration entry
servo:
  - id: my_servo
    output: pwm_output
    restore: true  # Add this to remember last position on restart

# Example output platform
# On ESP32, use ledc output
output:
  - platform: ledc
    id: pwm_output
    pin: GPIO27
    frequency: 50 Hz

# Slider configuration for controlling servo position
number:
  - platform: template
    name: "Servo Current Position"
    id: servo_position
    # Minimum slider valueue: -100
    step: 1
    min_value: -100
    max_value: 100
    on_value:
      - servo.write: 
          id: my_servo
          level: !lambda ' return x / 100.0;'
    optimistic: True

  # Use Home Assistant helper for Servo Target Position
  - platform: homeassistant
    name: "Servo Target Position HA" # Name used within ESPHome logs/UI
    id: servo_target # Keep ID for referencing in lambdas
    entity_id: input_number.servo_target # HA helper entity_id

  # Use Home Assistant helper for Servo Return Position
  - platform: homeassistant
    name: "Servo Return Position HA"
    id: servo_return
    entity_id: input_number.servo_return # HA helper entity_id

  # Use Home Assistant helper for Servo Wiggle Threshold
  - platform: homeassistant
    name: "Servo Wiggle Threshold HA"
    id: servo_wiggle
    entity_id: input_number.servo_wiggle_stop # HA helper entity_id
  
   # Use Home Assistant helper for Servo Wiggle Range
  - platform: homeassistant
    name: "Servo Wiggle Range HA"  # Updated name for clarity
    id: servo_wiggle_range
    entity_id: input_number.servo_wiggle_range # HA helper entity_id

   # Use Home Assistant helper for Servo Wiggle Shakes (Count)
  - platform: homeassistant
    name: "Servo Wiggle Shakes HA"
    id: servo_wiggle_shakes # ID to reference in ESPHome
    entity_id: input_number.servo_wiggle_shakes # HA helper entity_id

# Sync time with Home Assistant.
time:
  - platform: homeassistant
    id: homeassistant_time
